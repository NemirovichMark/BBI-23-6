{\rtf1\ansi\ansicpg1251\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 2.7\
using System;\
\
class Person\
\{\
    public string FirstName \{ get; set; \}\
    public string LastName \{ get; set; \}\
\}\
\
class Athlete : Person\
\{\
    private static int nextID = 1;\
    public int ID \{ get; private set; \}\
    public double Score \{ get; set; \}\
\
    public Athlete(string firstName, string lastName, double score)\
    \{\
        FirstName = firstName;\
        LastName = lastName;\
        ID = nextID++;\
        Score = score;\
    \}\
\}\
\
class Program\
\{\
    static void Main(string[] args)\
    \{\
        Console.WriteLine("\uc0\u1042 \u1074 \u1077 \u1076 \u1080 \u1090 \u1077  \u1082 \u1086 \u1083 \u1080 \u1095 \u1077 \u1089 \u1090 \u1074 \u1086  \u1091 \u1095 \u1072 \u1089 \u1090 \u1085 \u1080 \u1082 \u1086 \u1074 :");\
        int count = Convert.ToInt32(Console.ReadLine());\
\
        Athlete[] participants = new Athlete[count];\
\
        for (int i = 0; i < count; i++)\
        \{\
            Console.WriteLine($"\\n\uc0\u1059 \u1095 \u1072 \u1089 \u1090 \u1085 \u1080 \u1082  \{i + 1\}:");\
            Console.WriteLine("\uc0\u1042 \u1074 \u1077 \u1076 \u1080 \u1090 \u1077  \u1080 \u1084 \u1103 :");\
            string firstName = Console.ReadLine();\
            Console.WriteLine("\uc0\u1042 \u1074 \u1077 \u1076 \u1080 \u1090 \u1077  \u1092 \u1072 \u1084 \u1080 \u1083 \u1080 \u1102 :");\
            string lastName = Console.ReadLine();\
            double score = -1;\
\
            while (score != 0 && score != 0.5 && score != 1)\
            \{\
                Console.WriteLine("\uc0\u1042 \u1074 \u1077 \u1076 \u1080 \u1090 \u1077  \u1086 \u1094 \u1077 \u1085 \u1082 \u1091  \u1089 \u1087 \u1086 \u1088 \u1090 \u1089 \u1084 \u1077 \u1085 \u1072  (0; 0.5; 1):");\
                score = Convert.ToDouble(Console.ReadLine());\
                if (score != 0 && score != 0.5 && score != 1)\
                \{\
                    Console.WriteLine("\uc0\u1055 \u1086 \u1078 \u1072 \u1083 \u1091 \u1081 \u1089 \u1090 \u1072 , \u1074 \u1074 \u1077 \u1076 \u1080 \u1090 \u1077  \u1082 \u1086 \u1088 \u1088 \u1077 \u1082 \u1090 \u1085 \u1091 \u1102  \u1086 \u1094 \u1077 \u1085 \u1082 \u1091 .");\
                \}\
            \}\
\
            participants[i] = new Athlete(firstName, lastName, score);\
        \}\
\
        Array.Sort(participants, (x, y) => x.Score.CompareTo(y.Score));\
\
        Console.WriteLine("\\n\uc0\u1058 \u1072 \u1073 \u1083 \u1080 \u1094 \u1072  \u1091 \u1095 \u1072 \u1089 \u1090 \u1085 \u1080 \u1082 \u1086 \u1074 :");\
        Console.WriteLine("--------------------------------------------------");\
        foreach (Athlete participant in participants)\
        \{\
            Console.WriteLine($"\uc0\u1060 \u1048 \u1054 : \{participant.FirstName\} \{participant.LastName\}, \u1048 \u1044 : \{participant.ID\}, \u1041 \u1072 \u1083 \u1083 : \{participant.Score\}");\
        \}\
\
        Console.ReadKey();\
    \}\
\}\
\
3.1\
using System;\
\
public class Group\
\{\
    private int math;\
    private int physics;\
    private int chemistry;\
\
    public Group(int math, int physics, int chemistry)\
    \{\
        this.math = math;\
        this.physics = physics;\
        this.chemistry = chemistry;\
    \}\
\
    public virtual double CalculateAverage()\
    \{\
        return (math + physics + chemistry) / 3.0;\
    \}\
\}\
\
public class GroupA : Group\
\{\
    private int english;\
    private int history;\
\
    public GroupA(int math, int physics, int chemistry, int english, int history) : base(math, physics, chemistry)\
    \{\
        this.english = english;\
        this.history = history;\
    \}\
\
    public override double CalculateAverage()\
    \{\
        return (math + physics + chemistry + english + history) / 5.0;\
    \}\
\}\
\
public class GroupB : Group\
\{\
    private int biology;\
    private int geography;\
\
    public GroupB(int math, int physics, int chemistry, int biology, int geography) : base(math, physics, chemistry)\
    \{\
        this.biology = biology;\
        this.geography = geography;\
    \}\
\
    public override double CalculateAverage()\
    \{\
        return (math + physics + chemistry + biology + geography) / 5.0;\
    \}\
\}\
\
public class GroupC : Group\
\{\
    private int literature;\
    private int art;\
\
    public GroupC(int math, int physics, int chemistry, int literature, int art) : base(math, physics, chemistry)\
    \{\
        this.literature = literature;\
        this.art = art;\
    \}\
\
    public override double CalculateAverage()\
    \{\
        return (math + physics + chemistry + literature + art) / 5.0;\
    \}\
\}\
\
class Program\
\{\
    static void Main(string[] args)\
    \{\
        GroupA groupA = new GroupA(80, 75, 85, 90, 70);\
        GroupB groupB = new GroupB(85, 78, 88, 92, 82);\
        GroupC groupC = new GroupC(78, 72, 80, 85, 88);\
\
        Group[] groups = new Group[] \{ groupA, groupB, groupC \};\
\
        Console.WriteLine("\uc0\u1057 \u1090 \u1091 \u1076 \u1077 \u1085 \u1090 \u1099  \u1074 \u1089 \u1077 \u1093  \u1075 \u1088 \u1091 \u1087 \u1087 :");\
\
        foreach (Group group in groups)\
        \{\
            Console.WriteLine($"\uc0\u1057 \u1088 \u1077 \u1076 \u1085 \u1080 \u1081  \u1073 \u1072 \u1083 \u1083  \u1075 \u1088 \u1091 \u1087 \u1087 \u1099 : \{group.CalculateAverage()\}");\
        \}\
\
        Console.ReadKey();\
    \}\
\}\
\
}