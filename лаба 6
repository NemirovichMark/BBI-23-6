Лаба 6 
Уровень 1 Номер 2 

using System;
using System.Collections.Generic;
using System.Linq;

class Program
{
    static void Main(string[] args)
    {
        System.Console.OutputEncoding = System.Text.Encoding.UTF8;
        List<Runner> runners = new List<Runner>();

        
        runners.Add(new Runner("Махаури", "Группа 1", "Тренер Морозова ", 12)); 
        runners.Add(new Runner("Галямова", "Группа 2", "Тренера Немирович", 11)); 
        runners.Add(new Runner("Смирнова", "Группа 4", "Тренер Казанцев", 10)); 
        runners.Add(new Runner("Молокова", "Группа 3", "Тренер Песьяков", 9)); 
        
        Console.WriteLine("Результаты кросса:");

        
        Console.WriteLine("Фамилия\t\t Группа \t\t Преподаватель \t\t Результат в секундах \t\t Норматив");
        foreach (var runner in runners.OrderBy(runner => runner.Result))
        {
            Console.WriteLine($"{runner.Surname}\t\t{runner.Group}\t\t{runner.TeacherSurname}\t\t{runner.Result:F2}\t\t{(runner.Result <= 10 ? "Выполнен" : "Не выполнен")}");
        }

   
        int passedNorm = runners.Count(runner => runner.Result <= 10);
        Console.WriteLine($"\nОбщее количество участниц, выполнивших норматив: {passedNorm}");
    }
}

class Runner
{
    public string Surname { get; set; }
    public string Group { get; set; }
    public string TeacherSurname { get; set; }
    public double Result { get; set; }

    public Runner(string surname, string group, string teacherSurname, double result)
    {
        Surname = surname;
        Group = group;
        TeacherSurname = teacherSurname;
        Result = result;
    }
}


Уровень 2 Номер 8

using System;
using System.Collections.Generic;
using System.Linq;

public struct Player
{
    public string Name;
    public int TotalPenaltyTime;
}

public class Program
{
    static void Main()
    {
        List<Player> players = new List<Player>
        {
            new Player { Name = "Player1", TotalPenaltyTime = 15 },
            new Player { Name = "Player2", TotalPenaltyTime = 5 },
            new Player { Name = "Player3", TotalPenaltyTime = 10 },
            new Player { Name = "Player4", TotalPenaltyTime = 9},
            new Player { Name = "Player5", TotalPenaltyTime = 7 },
            
        };

        var candidates = players.Where(p => p.TotalPenaltyTime < 10)
                                .OrderBy(p => p.TotalPenaltyTime)
                                .ToList();
                                
System.Console.OutputEncoding = System.Text.Encoding.UTF8;
        Console.WriteLine("Кандидаты в сборную (в порядке возрастания штрафного времени):");
        foreach (var candidate in candidates)
        {
            Console.WriteLine($"{candidate.Name} - {candidate.TotalPenaltyTime} мин");
        }
    }
}

Урровень 3 Номер 5

using System;
using System.Collections.Generic;
using System.Linq;

public class Program
{
    public class Team
    {
        public string Name;
        public int goals;
        public int miss;
        public int Points;
    }

    static void Main()
    {
        List<Team> teams = new List<Team>
        {
            new Team { Name = "Team1", goals = 5, miss = 2 },
            new Team { Name = "Team2", goals = 3, miss = 3 },
            new Team { Name = "Team3", goals = 4, miss = 6 },
            
        };

        foreach (var team in teams)
        {
            if (team.goals > team.miss)
            {
                team.Points = 3;
            }
            else if (team.goals == team.miss)
            {
                team.Points = 1;
            }
            else
            {
                team.Points = 0;
            }
        }

        var orderedTeams = teams.OrderByDescending(t => t.Points)
                                 .ThenByDescending(t => t.goals - t.miss)
                                 .ToList();
System.Console.OutputEncoding = System.Text.Encoding.UTF8;
        Console.WriteLine("Таблица результатов:");
        for (int i = 0; i < orderedTeams.Count; i++)
        {
            Console.WriteLine($"{i + 1}. {orderedTeams[i].Name} - {orderedTeams[i].Points} очков");
        }
    }
}
